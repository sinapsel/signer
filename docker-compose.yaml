version: '3.8'

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet:  172.19.0.0/16

services:
  web:
    container_name: s-nginx
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${EXTERNAL_SSL_PORT}:${INTERNAL_SSL_PORT}"
    volumes:
      - ./src/public:/var/www/html/static		            # static built
      - ./docker/web/nginx/conf.d:/etc/nginx/conf.d:ro	# configs
      - ./volumes/extras/ssl:/extras			              # SSL & GnuPG certs and keys
      - ./volumes/nginx:/var/log/nginx 		              # log файлы.
    command: ["nginx", "-g", "daemon off;"]
    depends_on:
      - app

  app:
    container_name: s-app
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./src/app:/opt/signer/app
      - ./volumes/extras/gpg:/extras			              # SSL & GnuPG certs and keys
      - ./volumes/gnupg:/root/.gnupg
      - ./volumes/storage:/opt/signer/storage
      - ./src/main.py:/opt/signer/main.py:ro
      - ./src/celery.sh:/opt/signer/celery.sh:ro
      - ./src/uvicorn.sh:/opt/signer/uvicorn.sh:ro

    ports:
      - "${APP_EXPOSING_PORT}:${APP_EXPOSING_PORT}"

    extra_hosts:
      - "host.docker.internal:host-gateway"

    command: ["./uvicorn.sh"]
    # command: ["tail","-f","/dev/null"]

    depends_on:
      - redis

  redis:
    container_name: s-redis
    restart: unless-stopped
    build:
      context: .
      dockerfile: docker/redis/Dockerfile
    env_file:
      - .env
    command: --port ${REDIS_PORT}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - ./volumes/redis:/data	

  worker:
    container_name: s-celeryw
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    env_file:
      - .env
    volumes:
      - ./src/app:/opt/signer/app
      - ./volumes/extras/gpg:/extras			              # SSL & GnuPG certs and keys
      - ./volumes/gnupg:/root/.gnupg
      - ./volumes/storage:/opt/signer/storage
      - ./src/main.py:/opt/signer/main.py:ro
      - ./src/celery.sh:/opt/signer/celery.sh:ro
      - ./src/uvicorn.sh:/opt/signer/uvicorn.sh:ro
    command: ["./celery.sh", "worker"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - app
      - redis


  beat:
    container_name: s-celeryb
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    env_file:
      - .env
    volumes:
      - ./src/app:/opt/signer/app
      - ./volumes/gnupg:/root/.gnupg
      - ./volumes/storage:/opt/signer/storage
      - ./src/main.py:/opt/signer/main.py:ro
      - ./src/celery.sh:/opt/signer/celery.sh:ro
      - ./src/uvicorn.sh:/opt/signer/uvicorn.sh:ro
    command: [ "./celery.sh", "beat" ]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - app
      - redis
      - worker

  flower:
    container_name: s-celeryf
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    env_file:
      - .env
    volumes:
      - ./volumes/storage:/opt/signer/app/storage/
      - ./src/app:/opt/signer/app
      - ./src/main.py:/opt/signer/main.py:ro
      - ./src/celery.sh:/opt/signer/celery.sh:ro
      - ./src/uvicorn.sh:/opt/signer/uvicorn.sh:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: ["./celery.sh", "flower"]
    depends_on:
      - app
      - redis
      - worker
    ports:
      - "${EXTERNAL_FLOWER_PORT}:${INTERNAL_FLOWER_PORT}"
